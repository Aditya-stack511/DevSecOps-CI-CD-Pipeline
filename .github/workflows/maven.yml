name: DevSecOps Pipeline
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
#  sonarcloud:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          # Disabling shallow clone is recommended for improving relevancy of reporting
#          fetch-depth: 0
#      - name: SonarCloud Scan
#        run: ./mvnw -Dmaven.test.skip=true -X -B verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=jpetstore -Dsonar.organization=default -Dsonar.login=d218cbce2137ce83403595d0116ec8046bfbbeb6
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: d218cbce2137ce83403595d0116ec8046bfbbeb6

#  snyk:
#    runs-on: ubuntu-latest
##    needs: sonarcloud
#    steps:
#      - uses: actions/checkout@v2
#        with:
#        # Disabling shallow clone is recommended for improving relevancy of reporting
#          fetch-depth: 0
#      - name: Run Snyk to check for vulnerabilities
#        uses: snyk/actions/Maven@master # For node projects, change accordingly
#        env:
#          SNYK_TOKEN: dd2cc2e7-882e-4a96-9d2d-527da5cb745a
#        with:
#          command: monitor


#  sonar:
#    name: Inspect - Using Sonar
#    runs-on: ubuntu-latest
##    needs: [ test ]
#
#    steps:
#      - name: Check out the code
#        uses: actions/checkout@v1
#        with:
#          fetch-depth: 0
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn -B verify -DexcludedGroups="Smoke | Staging | LamdaTest | BrowserStack" org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.issuesReport.html.enable=true -Dsonar.projectKey=jpetstore
#      - name: SonarQube Quality Gate check
#        uses: sonarsource/sonarqube-quality-gate-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        timeout-minutes: 5
#        with:
#          scanMetadataReportFile: target/sonar/report-task.txt


#  gitleaks:
#    name: secret scan using Gitleaks
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - uses: gitleaks/gitleaks-action@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  snykScan:
    name: SCA Scan using Snyk
    runs-on: ubuntu-latest
#    needs: [codeqlScan, codacyScan, appScan]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Maven
        run: mvn -N io.takari:maven:wrapper -Dmaven=3.8.2
      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/maven-3-jdk-11@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  zap_scan:
    runs-on: ubuntu-latest
    name: zap
    #needs: snyk
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.6.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://petstore.octoperf.com/actions/Catalog.action' # Change URL or IP of your target application
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'